cmake_minimum_required(VERSION 3.0)
set(CMAKE_CXX_STANDARD 17)

# --- Fetch FTXUI --------------------------------------------------------------
include(FetchContent)

set(FETCHCONTENT_UPDATES_DISCONNECTED TRUE)
FetchContent_Declare(ftxui
  GIT_REPOSITORY https://github.com/ArthurSonzogni/ftxui
  GIT_TAG v3.0.0
)

FetchContent_GetProperties(ftxui)
if(NOT ftxui_POPULATED)
  FetchContent_Populate(ftxui)
  add_subdirectory(${ftxui_SOURCE_DIR} ${ftxui_BINARY_DIR} EXCLUDE_FROM_ALL)
endif()
# ------------------------------------------------------------------------------


project(dbc_example C CXX)

# location of source code files
include_directories( include )

# tell cmake where to put the executables that it creates
file( MAKE_DIRECTORY bin )    
set( CMAKE_RUNTIME_OUTPUT_DIRECTORY bin ) 

# where to put the object files it creates
file( MAKE_DIRECTORY lib )
SET( LIBRARY_OUTPUT_PATH lib )

# autogenerate code from the DBC file
file( MAKE_DIRECTORY src_autogen )    
add_custom_command( OUTPUT src_autogen/data.h src_autogen/data.c
        COMMAND python3 -m cantools generate_c_source candata.dbc -o src_autogen
        MAIN_DEPENDENCY candata.dbc
        COMMENT "Autogenerate code from DBC file" )

# create shared library of the autogenerated code from the DBC file
add_library( data SHARED src_autogen/candata.c )
target_include_directories( data PUBLIC src_autogen )

add_executable( send_data src/send_data.cpp )
target_link_libraries( send_data PRIVATE data 
                       PRIVATE ftxui::screen
                       PRIVATE ftxui::dom
                       PRIVATE ftxui::component)

#add_executable( raw_decode src/demo_raw_decode.cpp )
#target_link_libraries( raw_decode PRIVATE data )

#add_executable( demo_send src/demo_send.cpp )
#target_link_libraries( demo_send PRIVATE data )

add_executable( Input_terminal src/Input_terminal.cpp )
target_link_libraries( Input_terminal PRIVATE data 
                       PRIVATE ftxui::screen
                       PRIVATE ftxui::dom
                       PRIVATE ftxui::component)
                       
#add_executable( candump src/candump.cpp )
#target_link_libraries( candump PRIVATE data )

add_executable( get_data src/get_data.cpp )
target_link_libraries( get_data PRIVATE data )

find_package(Catch2 3 REQUIRED)
add_executable(tests_get_data src/tests_get_data.cpp)
target_link_libraries(tests_get_data PRIVATE Catch2::Catch2WithMain
                                     PRIVATE data)
